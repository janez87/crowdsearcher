{
  "requireParenthesesAroundIIFE": true,
  "disallowMultipleVarDecl": true,
  "requireBlocksOnNewline": true,
  "disallowEmptyBlocks": true,
  "requireSpacesInsideObjectBrackets": "all",
  "requireSpacesInsideArrayBrackets": "all",
  "disallowQuotedKeysInObjects": "allButReserved",
  "disallowDanglingUnderscores": true,
  "disallowSpaceAfterObjectKeys": true,
  "requireCommaBeforeLineBreak": true,
  "requireCamelCaseOrUpperCaseIdentifiers": true,
  "disallowTrailingWhitespace": true,
  "disallowKeywords": ["with", "eval"],
  "disallowKeywordsOnNewLine": ["else"],
  "requireCapitalizedConstructors": true,
  "disallowYodaConditions": true,
  "safeContextKeyword": [ "that", "_this", "self" ],

  "requireCurlyBraces": [
    "try",
    "catch",
    "switch"
  ],

  "requireSpaceAfterKeywords": [
    "return"
  ],


  "requireSpacesInFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },
  "disallowSpacesInFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },
  "requireSpacesInAnonymousFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },
  "disallowSpacesInAnonymousFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInNamedFunctionExpression": {
    "beforeOpeningRoundBrace": true,
    "beforeOpeningCurlyBrace": true
  },
  "validateQuoteMarks": {
    "mark": "'",
    "escape": true
  },

  "validateIndentation": 2,
  "disallowMixedSpacesAndTabs": true,


  "requireOperatorBeforeLineBreak": [
    "?",
    "+",
    "-",
    "/",
    "*",
    "=",
    "==",
    "===",
    "!=",
    "!==",
    ">",
    ">=",
    "<",
    "<="
  ],
  "disallowLeftStickedOperators": [
    "?",
    "+",
    "-",
    "/",
    "*",
    "=",
    "==",
    "===",
    "!=",
    "!==",
    ">",
    ">=",
    "<",
    "<="
  ],
  "disallowRightStickedOperators": [
    "?",
    "+",
    "/",
    "*",
    ":",
    "=",
    "==",
    "===",
    "!=",
    "!==",
    ">",
    ">=",
    "<",
    "<="
  ],
  "requireSpaceBeforeBinaryOperators": [
    "+",
    "-",
    "/",
    "*",
    "=",
    "==",
    "===",
    "!=",
    "!=="
  ],
  "requireSpaceAfterBinaryOperators": [
    "+",
    "-",
    "/",
    "*",
    "=",
    "==",
    "===",
    "!=",
    "!=="
  ],
  "requireRightStickedOperators": ["!"],
  "requireLeftStickedOperators": [","],
  "disallowSpaceAfterPrefixUnaryOperators": ["++", "--", "+", "-", "~", "!"],
  "disallowSpaceBeforePostfixUnaryOperators": ["++", "--"]
}