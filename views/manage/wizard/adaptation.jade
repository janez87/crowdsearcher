extends ./layout

block append css
  style(type='text/css').
    .condition:first-child .logic-operator {
      display: none;
    }
    
    .condition .btn-add {
      display: none;
    }
    .condition:last-child .btn-add {
      display: inline-block;
    }

    .condition .btn-remove {
    }
    .condition:last-child .btn-remove {
      display: none;
    }

block append lateScripts
  script.
    var $conditions = $( '#conditions' );
    var $conditionList = $( '#condition_list' );
    $conditions.on( 'click', '.condition .btn-add', function() {
      var $template = $( '#template' ).clone();
      $template.attr( 'id', null );
      $template.find( 'select' ).attr( 'selectedIndex', null );
      $template.find( '.value' ).val( null );
      $conditions.append( $template );
    } );
    $conditions.on( 'click', '.condition .btn-remove', function( evt ) {
      $( this ).closest( '.condition' ).remove();
    } );

    $( '#add_rule' ).click( function() {
      var rule = {
        when: [],
        'do': {
          action: '',
          params: {}
        }
      };

      // Conditions
      $conditions.find( '.condition' ).each( function( idx) {
        var condition = {};
        condition.condition = $( '.event', this ).val();
        condition.operator = $( '.operator', this ).val();
        // Possible unsafe
        condition.value = parseFloat( $( '.value', this ).val() );
        if( idx!=0 )
          condition.logicOperator = $( '.logic-operator', this ).val();

        rule.when.push( condition );
      } );

      // Action
      rule[ 'do' ].action = $( '#action' ).val();

      // Create list item
      var $li = $( '<li></li>' );
      $li.addClass( 'list-group-item' );
      $li.append( '<pre>'+JSON.stringify( rule, null, 2 )+'</pre>' )
      $conditionList.append( $li );
    } );

    $( '#action' ).change( function() {
      var val = this.value;
      $( '.action-config' ).hide();
      $( '#action_'+val+'_config' ).show();
    } );



block content

  .row
    .col-md-6
      h2 Adaptation rule:

      h3 WHEN:
      #conditions
        #template.row.condition
          .col-md-2
            select.logic-operator.form-control(title='Logic operator')
              option(value='AND') &amp;&amp;
              option(value='OR') ||
          .col-md-3
            select.event.form-control(title='Selected the condition')
              option None
              optgroup(label='Task')
                option(value='Task.quality') Task.quality
                option(value='Task.#executions') Task.#executions
                option(value='Task.#closedExecutions') Task.#closedExecutions
                option(value='Task.#invalidExecutions') Task.#invalidExecutions
                option(value='Task.activeTime') Task.activeTime
                option(value='Task.idleTime') Task.idleTime
                option(value='Task.#openObjects') Task.#openObjects
                option(value='Task.#closedObjects') Task.#closedObjects

              optgroup(label='Object')
                option(value='Object.quality') Object.quality
                option(value='Object.#executions') Object.#executions
                option(value='Object.#closedExecutions') Object.#closedExecutions
                option(value='Object.#invalidExecutions') Object.#invalidExecutions
                option(value='Object.#answers') Object.#answers

              optgroup(label='Performer')
                option(value='Performer.quality') Performer.quality
                option(value='Performer.#executions') Performer.#executions
                option(value='Performer.#closedExecutions') Performer.#closedExecutions
                option(value='Performer.#invalidExecutions') Performer.#invalidExecutions
                option(value='Performer.idleTime') Performer.idleTime
                option(value='Performer.activeTime') Performer.activeTime

              optgroup(label='Platform')
                option(value='Platform.quality') Platform.quality
                option(value='Platform.#executions') Platform.#executions
                option(value='Platform.#closedExecutions') Platform.#closedExecutions
                option(value='Platform.#invalidExecutions') Platform.#invalidExecutions
                option(value='Platform.idleTime') Platform.idleTime
                option(value='Platform.activeTime') Platform.activeTime

              optgroup(label='Community')
                option(value='Community.quality') Community.quality
                option(value='Community.#executions') Community.#executions
                option(value='Community.#closedExecutions') Community.#closedExecutions
                option(value='Community.#invalidExecutions') Community.#invalidExecutions
                option(value='Community.idleTime') Community.idleTime
                option(value='Community.activeTime') Community.activeTime
          .col-md-2
            select.operator.form-control(title='Select the operator for the condition')
              option(value='>') &gt;
              option(value='<') &lt;
              option(value='<=') &lt;=
              option(value='>=') &gt;=
              option(value='==') ==
          .col-md-3
            input.value.form-control(type='number',title='Insert the value')
          .col-md-2.text-right
            button(type='button',title='Add one more condition').btn.btn-success.btn-sm.btn-add
              i.fa.fa-plus
            button(type='button',title='Remove current condition').btn.btn-danger.btn-sm.btn-remove
              i.fa.fa-minus
      h3 DO
      select#action.form-control(title='Actions')
        option None
        option(value='replan') Re-plan
        option(value='migrate') Migrate
      
      #configurations
        .action-config#action_replan_config(style='display: none;')
          h3 Re-plan parameters
        .action-config#action_migrate_config(style='display: none;')
          h3 Migrate parameters
      hr


      .text-right
        button#add_rule(type='button').btn.btn-success Add rule 
          i.fa.fa-plus
    .col-md-6
      h2 Adaptation rules in use:
      ul#condition_list.list-group
