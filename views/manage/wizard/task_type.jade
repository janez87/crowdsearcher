extends ./layout

include ../../includes/params

block append lateScripts
  script.

    $btnSend.click( function( evt ) {
      var $container = $( '.task-type-config:visible' );
      var name = $container.data( 'name' );
      var params = getParams( $container );

      saveData( {
        name: name,
        params: params
      } );

      return sendData.call( this, evt );
    } );

    function saveData( data ) {
      if ( data )
        $( '.wzData' ).val( JSON.stringify( data ) );
    }


    var $useCases = $( '.use-cases' );
    var $useCaseList = $( '.use-case' );
    var $taskTypes = $( '.task-type' );
    var $taskTypeConfigs = $( '.task-type-config' );

    function handleEnter() {
      var taskTypes = $( this ).data( 'taskTypes' );
      $taskTypes.hide();
      $( '#tt_'+taskTypes.join( ',#tt_' ) ).show();
    }
    function handleExit() {
      $taskTypes.hide();
    }

    $useCaseList.on( 'mouseenter', handleEnter );
    $useCases.on( 'mouseleave', handleExit );
    
    $useCaseList.on( 'click', function() {
      var $this = $( this );
      var wasActive = $this.hasClass( 'active' );

      $useCaseList.off( 'mouseenter' );
      $useCases.off( 'mouseleave' );
      
      $useCaseList.removeClass( 'active' );
      $taskTypes.removeClass( 'active' );
      $taskTypeConfigs.hide();

      $this.addClass( 'active' );
      if( wasActive ) {
        $useCaseList.on( 'mouseenter', handleEnter );
        $useCases.on( 'mouseleave', handleExit );
        $this.removeClass( 'active' );
      } else {
        handleEnter.call( this );
      }
    } );


    $taskTypes.on( 'click', function() {
      var $this = $( this );
      var id = $this.data( 'taskType' );
      $taskTypes.removeClass( 'active' );
      $this.addClass( 'active' );
      $taskTypeConfigs.hide();
      $( '#tt_'+id+'_config' ).show();
    } );

block append css
  style(type='text/css').
    .task-type {
      cursor: pointer;
      border: 1px solid #ccc;
      border-top: none;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;
      padding: 5px 10px;
    }
    .task-type:hover {
      background-color: #efefef;
    }
    .task-type.active {
      background-color: #ccc;
      border-color: #999;
    }
    .task-type.active:hover {
      background-color: #ddd;
    }
    .use-case {
      cursor: pointer;
      text-shadow: 1px 1px 3px #999;
    }
    .use-case.active {
      background-color: #ccc;
      border-color: #999;
    }
    .use-case:hover {
      background-color: #efefef;
    }
    .use-case.active:hover {
      background-color: #ddd;
    }
    img.media-object {
      width: 64px;
      height: 64px;
    }

block content
  //.well
    button.close(type='button',data-dismiss='well',aria-hidden='true') &times;
    strong Info:

  .row.selection
    .col-md-4
      h2 Select the use-case
      ul.list-group.use-cases
        for task_types, name in config.useCases
          li.list-group-item.use-case(data-use-case=name, data-task-types=task_types)= name
    .col-md-8
      h2 Task types

      for taskType in config.taskTypes
        .media.task-type(id='tt_'+taskType.id,
          data-task-type=taskType.id,
          style='display: none;')
          if taskType.image && taskType.image.length>0
            img.media-object.pull-left(alt=taskType.name,
              src=taskType.image)
          else
            img.media-object.pull-left(alt=taskType.name,
              src='http://placehold.it/64&text='+taskType.name.replace( / /g, '+' ) )
          .media-body
            h4.media-headding= taskType.name
            if taskType.description && taskType.description.length>0
              p!= md( taskType.description )
            else
              p.text-muted No description available

  hr
  for taskType in config.taskTypes
    .row.task-type-config(
      id='tt_'+taskType.id+'_config',
      data-name=taskType.id,
      style='display: none;')
      .col-md-12
        h2 #{taskType.name} configuration
      .col-md-6
        h3 Parameters
        if _.size( taskType.params )>0
          +printParamsInput( taskType.params, 'tt_'+taskType.id )
        else
          p.text-muted No parameters to set.
      .col-md-6
        h3 Default values
        if _.size( taskType.defaults )>0
          +printParams( taskType.defaults )
        else
          p.text-muted No default values.
