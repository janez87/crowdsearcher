extends ./layout

include ../../includes/params

block append lateScripts
  script.
    var $additionalOperations = $( '.additional-operations' );
    var $operationConfigs = $( '.operation-config' );
    var $operations = $( '.operation' );
    $operations.on( 'click', function() {
      var $this = $( this );
      $operations.removeClass( 'active' );
      $this.addClass( 'active' );
      $this = $( this );
      var id = $this.data( 'operation' );
      $operationConfigs.hide();
      $( '#op_'+id ).show();
    } );

    $additionalOperations.on( 'click', '.remove', function( evt ) {
      evt.preventDefault();
      var $li = $( this ).closest( 'li' );
      $li.remove();
      return false;
    } );
    $operationConfigs.on( 'click', '.add', function( evt ) {
      var $config = $( evt.delegateTarget );
      var operation = {
        id: $config.data( 'operation' ),
        name: $config.data( 'operationName' ),
        params: getParams( $config )
      };

      var $li = $( '<li></li>' );
      $li.addClass( 'list-group-item' );
      $li.attr( 'data-value', JSON.stringify( operation ) );
      $li.html( operation.name+'<a href="#" class="btn btn-xs btn-danger remove pull-right"><i class="fa fa-trash-o"></i></a>' );
      $additionalOperations.append( $li );
    } );


    function saveData( data ) {
      if ( data )
        $( '.wzData' ).val( JSON.stringify( data ) );
    }

    $btnSend.click( function( evt ) {
      var $operations = $( '.additional-operations li' );

      if( $operations.length!==0 ) {

        var addOps = [];
        $operations.each(  function( ) {
          var op = $( this ).data( 'value' );
          addOps.push( op );
        } );

        saveData( addOps );
      }

      return sendData.call( this, evt );
    } );


block append css
  style(type='text/css').
    .operation {
      cursor: pointer;
      border: 1px solid #ccc;
      border-top: none;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;
      padding: 5px 10px;
    }
    .operation:hover {
      background-color: #efefef;
    }
    .operation.active {
      background-color: #ccc;
      border-color: #999;
    }
    .operation.active:hover {
      background-color: #ddd;
    }
    img.media-object {
      width: 64px;
      height: 64px;
    }

block wizardTitle
  h2 Add operations

block inputData
  input(type='hidden', name='name', value='add_operations')
  input.wzData(type='hidden', name='data', value='null')

block content
  .row
    .col-md-4
      h2 Additional operations

      for operation, opId in config.operations
        .media.operation(data-operation=opId)
          .pull-left
            if operation.image
              img.media-object(src=operation.image,alt=operation.name)
            else
              img.media-object(alt=operation.name,
                src='http://placehold.it/64&text='+opId)
          
          .media-body
            h4.media-heading= operation.name
            if operation.description && operation.description.length>0
              p!= md(operation.description)
            else
              p.text-muted No description present.

    .col-md-5
      for operation, opId in config.operations
        .operation-config(id='op_'+opId,
          data-operation=opId,
          data-operation-name=operation.name,
          style='display: none;')
          h3 Configure #{operation.name}
          if _.size( operation.params )>0
            +printParamsInput( operation.params )
          else
            p.text-muted Nothing to configure.
          .text-right
            button.btn.btn-success.add(type='button') Add 
              i.fa.fa-plus
    
    .col-md-3
      h2 Added operations
      ul.list-group.additional-operations